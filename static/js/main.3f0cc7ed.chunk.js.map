{"version":3,"sources":["theme.js","TypographyDemo.js","AccordionDemo.js","ButtonDemos.js","FormControlDemos.js","SpinnerDemo.js","App.js","serviceWorker.js","index.js"],"names":["theme","createMuiTheme","typography","fontFamily","palette","primary","main","secondary","background","paper","default","overrides","MuiCard","root","margin","minWidth","padding","borderRadius","boxShadow","MuiGrid","MuiExpansionPanel","borderTop","borderBottom","backgroundColor","display","MuiExpansionPanelSummary","minHeight","expandIcon","transform","content","MuiFilledInput","borderTopLeftRadius","borderTopRightRadius","MuiButton","textTransform","fontSize","fontWeight","containedPrimary","color","containedSecondary","border","TypographyDemo","Grid","item","Typography","data-id","variant","gutterBottom","Accordion","heading","children","ExpansionPanel","ExpansionPanelSummary","ExpansionPanelDetails","AccordionDemo","ButtonDemos","Button","SelectOptions","options","Select","native","map","label","value","key","SelectField","FormControl","fullWidth","InputLabel","FormControlDemos","Checkbox","RadioGroup","defaultValue","FormControlLabel","control","Radio","TextField","id","multiline","rows","SpinnerDemo","CircularProgress","size","SectionHeading","App","ThemeProvider","CssBaseline","Box","justifyContent","Card","CardContent","container","direction","alignItems","spacing","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3f0cc7ed.chunk.js","sourcesContent":["import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nexport const theme = createMuiTheme({\r\n  typography: {\r\n    fontFamily: \"Gordita Regular\"\r\n  },\r\n  palette: {\r\n    primary: { main: \"rgb(255, 180, 50)\" },\r\n    secondary: { main: \"rgb(63, 117, 198)\" },\r\n    background: {\r\n      paper: \"#fff\",\r\n      default: \"#eee\"\r\n    }\r\n  },\r\n  overrides: {\r\n    MuiCard: {\r\n      root: {\r\n        margin: \"32px 0\",\r\n        minWidth: 275,\r\n        padding: \"16px\",\r\n        borderRadius: 0,\r\n        boxShadow: \"none\"\r\n      }\r\n    },\r\n    MuiGrid: {},\r\n    MuiExpansionPanel: {\r\n      root: {\r\n        borderTop: \"1px solid rgb(227, 227, 227)\",\r\n        borderBottom: \"1px solid rgb(227, 227, 227)\",\r\n        boxShadow: \"none\",\r\n        margin: \"0\",\r\n        \"&$expanded\": {\r\n          margin: \"0\",\r\n          backgroundColor: \"white !important\"\r\n        },\r\n        \"&::before\": {\r\n          display: \"none\"\r\n        },\r\n        \"&:hover\": {\r\n          backgroundColor: \"rgb(248, 248, 248)\"\r\n        }\r\n      }\r\n    },\r\n    MuiExpansionPanelSummary: {\r\n      root: {\r\n        \"&$expanded\": {\r\n          minHeight: \"48px\"\r\n        }\r\n      },\r\n      expandIcon: {\r\n        \"&$expanded\": {\r\n          transform: 'none'\r\n        }\r\n      },\r\n      content: {\r\n        \"&$expanded\": {\r\n          margin: \"12px 0\"\r\n        }\r\n      }\r\n    },\r\n    MuiFilledInput: {\r\n      root: {\r\n        borderTopLeftRadius: 0,\r\n        borderTopRightRadius: 0\r\n      }\r\n    },\r\n    MuiButton: {\r\n      root: {\r\n        borderRadius: 0,\r\n        textTransform: \"none\",\r\n        fontSize: \"16px\",\r\n        fontWeight: 600,\r\n        padding: \"12px 24px\"\r\n      },\r\n      containedPrimary: {\r\n        boxShadow: \"none\",\r\n        backgroundColor: \"rgb(236, 0, 0)\",\r\n        color: \"white\",\r\n        \"&:hover\": {\r\n          backgroundColor: \"rgb(179, 0, 0)\",\r\n          boxShadow: \"none\"\r\n        }\r\n      },\r\n      containedSecondary: {\r\n        boxShadow: \"none\",\r\n        backgroundColor: \"white\",\r\n        border: \"1px solid rgb(236, 0, 0)\",\r\n        color: \"rgb(236, 0, 0)\",\r\n        \"&:hover\": {\r\n          border: \"1px solid rgb(179, 0, 0)\",\r\n          backgroundColor: \"rgb(179, 0, 0)\",\r\n          color: \"white\",\r\n          boxShadow: \"none\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n","import { Typography, Grid } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { SectionHeading } from \"./App\";\r\n\r\nexport const TypographyDemo = () => (\r\n  <Grid item>\r\n    <SectionHeading>Typography</SectionHeading>\r\n    <Typography data-id=\"test\" variant=\"h1\" gutterBottom>\r\n      h1. Heading\r\n    </Typography>\r\n    <Typography variant=\"h2\" gutterBottom>\r\n      h2. Heading\r\n    </Typography>\r\n    <Typography variant=\"h3\" gutterBottom>\r\n      h3. Heading\r\n    </Typography>\r\n    <Typography variant=\"h4\" gutterBottom>\r\n      h4. Heading\r\n    </Typography>\r\n    <Typography variant=\"h5\" gutterBottom>\r\n      h5. Heading\r\n    </Typography>\r\n    <Typography variant=\"h6\" gutterBottom>\r\n      h6. Heading\r\n    </Typography>\r\n    <Typography variant=\"body1\" gutterBottom>\r\n      Body text\r\n    </Typography>\r\n    <Typography variant=\"body2\" gutterBottom>\r\n      Body text 2\r\n    </Typography>\r\n  </Grid>\r\n);\r\n","import {\r\n  ExpansionPanel,\r\n  ExpansionPanelDetails,\r\n  ExpansionPanelSummary,\r\n  Typography,\r\n  Grid\r\n} from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport React from \"react\";\r\nimport { SectionHeading } from \"./App\";\r\n\r\nconst Accordion = ({ heading, children }) => (\r\n  <ExpansionPanel>\r\n    <ExpansionPanelSummary expandIcon={<AddIcon color=\"error\" />}>\r\n      <Typography>{heading}</Typography>\r\n    </ExpansionPanelSummary>\r\n    <ExpansionPanelDetails>\r\n      <Typography>{children}</Typography>\r\n    </ExpansionPanelDetails>\r\n  </ExpansionPanel>\r\n);\r\n\r\nexport const AccordionDemo = () => (\r\n  <Grid item>\r\n    <SectionHeading>Accordion</SectionHeading>\r\n    <Accordion heading=\"Accordion\">\r\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse\r\n      malesuada lacus ex, sit amet blandit leo lobortis eget.\r\n    </Accordion>\r\n  </Grid>\r\n);\r\n","import { Button, Grid } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { SectionHeading } from \"./App\";\r\n\r\nexport const ButtonDemos = () => (\r\n  <Grid item>\r\n    <SectionHeading>Primary Button</SectionHeading>\r\n    <Button color=\"primary\" variant=\"contained\">\r\n      Select plan\r\n    </Button>\r\n  </Grid>\r\n);\r\n","import {\r\n  Checkbox,\r\n  FormControl,\r\n  FormControlLabel,\r\n  InputLabel,\r\n  Radio,\r\n  RadioGroup,\r\n  Select,\r\n  TextField,\r\n  Grid\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { SectionHeading } from \"./App\";\r\n\r\nconst SelectOptions = ({ options }) => (\r\n  <Select color=\"secondary\" native>\r\n    {options.map(({label, value}) => <option key={label} value={value}>{label}</option>)}\r\n  </Select>\r\n);\r\n\r\nconst SelectField = ({label, options}) => (\r\n  <FormControl variant=\"filled\" fullWidth>\r\n    <InputLabel color=\"secondary\">{label}</InputLabel>\r\n    <SelectOptions options={options} />\r\n  </FormControl>\r\n);\r\n\r\nconst options = [\r\n  { label: \"Ten\", value: 10 },\r\n  { label: \"Twenty\", value: 20 },\r\n  { label: \"Thirty\", value: 30 }\r\n];\r\n\r\nexport const FormControlDemos = () => (\r\n  <>\r\n    <Grid item>\r\n      <SectionHeading>Checkbox</SectionHeading>\r\n      <Checkbox color=\"primary\" />\r\n    </Grid>\r\n    <Grid item>\r\n      <SectionHeading>Radio button</SectionHeading>\r\n      <RadioGroup defaultValue=\"yes\">\r\n        <FormControlLabel\r\n          value=\"yes\"\r\n          control={<Radio color=\"primary\" />}\r\n          label=\"Yes\"\r\n        />\r\n        <FormControlLabel\r\n          value=\"no\"\r\n          control={<Radio color=\"primary\" />}\r\n          label=\"No\"\r\n        />\r\n      </RadioGroup>\r\n    </Grid>\r\n    <Grid item>\r\n      <SectionHeading>Select box</SectionHeading>\r\n      <SelectField label=\"Age\" options={options}/>\r\n    </Grid>\r\n    <Grid item>\r\n      <SectionHeading>TextField</SectionHeading>\r\n      <TextField\r\n        id=\"filled-secondary\"\r\n        label=\"Text field\"\r\n        variant=\"filled\"\r\n        color=\"secondary\"\r\n      />\r\n    </Grid>\r\n    <Grid item>\r\n      <SectionHeading>TextArea</SectionHeading>\r\n      <TextField\r\n        id=\"filled-secondary\"\r\n        multiline\r\n        rows=\"4\"\r\n        label=\"Text area\"\r\n        variant=\"filled\"\r\n        color=\"secondary\"\r\n      />\r\n    </Grid>\r\n  </>\r\n);\r\n","import { CircularProgress, Grid } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { SectionHeading } from \"./App\";\r\n\r\nexport const SpinnerDemo = () => (\r\n  <Grid item>\r\n    <SectionHeading>Spinner</SectionHeading>\r\n    <CircularProgress size={64} />\r\n  </Grid>\r\n);\r\n","import {\n  Box,\n  Card,\n  CardContent,\n  ThemeProvider,\n  Typography,\n  CssBaseline,\n  Grid\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport \"./App.css\";\nimport { theme } from \"./theme\";\nimport { TypographyDemo } from \"./TypographyDemo\";\nimport { AccordionDemo } from \"./AccordionDemo\";\nimport { ButtonDemos } from \"./ButtonDemos\";\nimport { FormControlDemos } from \"./FormControlDemos\";\nimport { SpinnerDemo } from \"./SpinnerDemo\";\n\nexport const SectionHeading = ({ children }) => (\n  <Typography variant=\"h5\" gutterBottom>\n    {children}\n  </Typography>\n);\n\nconst App = () => (\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <Box display=\"flex\" justifyContent=\"center\">\n      <Card>\n        <CardContent>\n          <Grid\n            container\n            direction=\"column\"\n            alignItems=\"flex-start\"\n            spacing={5}\n          >\n            <TypographyDemo />\n            <AccordionDemo />\n            <ButtonDemos />\n            <FormControlDemos />\n            <SpinnerDemo />\n          </Grid>\n        </CardContent>\n      </Card>\n    </Box>\n  </ThemeProvider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}